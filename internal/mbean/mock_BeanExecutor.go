// Code generated by mockery v2.14.0. DO NOT EDIT.

package mbean

import mock "github.com/stretchr/testify/mock"

// MockBeanExecutor is an autogenerated mock type for the BeanExecutor type
type MockBeanExecutor struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *MockBeanExecutor) Close() {
	_m.Called()
}

// Execute provides a mock function with given fields: operation
func (_m *MockBeanExecutor) Execute(operation MBeanOperation) (interface{}, error) {
	ret := _m.Called(operation)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(MBeanOperation) interface{}); ok {
		r0 = rf(operation)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(MBeanOperation) error); ok {
		r1 = rf(operation)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InitializeMBeanConnection provides a mock function with given fields: uri
func (_m *MockBeanExecutor) InitializeMBeanConnection(uri string) error {
	ret := _m.Called(uri)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(uri)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewMockBeanExecutor interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockBeanExecutor creates a new instance of MockBeanExecutor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockBeanExecutor(t mockConstructorTestingTNewMockBeanExecutor) *MockBeanExecutor {
	mock := &MockBeanExecutor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
